@page "/forum"
@using ForumStudenti.Models
@using ForumStudenti.Services
@inject IForumService ForumService

<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <div class="bg-white shadow rounded-lg p-6 mb-8">
        <div class="flex flex-col space-y-4 sm:flex-row sm:space-y-0 sm:justify-between sm:items-center mb-6">
            <h2 class="text-2xl font-bold text-gray-900">Discussioni Recenti</h2>
            <div class="flex space-x-3">
                <div class="search-container relative">
                    <input type="text" @bind="searchQuery" @bind:event="oninput" 
                           placeholder="Cerca discussioni..." 
                           class="pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500">
                    <i class="fas fa-search absolute left-3 top-3 text-gray-400"></i>
                </div>
                <button @onclick="ShowNewDiscussionModal" 
                        class="bg-indigo-600 text-white px-4 py-2 rounded-md text-sm font-medium hover:bg-indigo-700 transition duration-150 flex items-center">
                    <i class="fas fa-plus mr-2"></i> Nuova Discussione
                </button>
            </div>
        </div>

        <!-- Categories -->
        <div class="flex flex-wrap gap-2 mb-6">
            @foreach (var category in categories)
            {
                <button @onclick="() => FilterByCategory(category)"
                        class="@(selectedCategory == category ? "bg-indigo-100 text-indigo-700" : "bg-gray-100 text-gray-700") 
                               px-3 py-1 rounded-full text-sm font-medium hover:bg-indigo-200 transition duration-150">
                    @category
                </button>
            }
        </div>

        <!-- Posts -->
        <div class="space-y-6">
            @if (_posts == null)
            {
                <div class="flex justify-center items-center py-8">
                    <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-indigo-600"></div>
                </div>
            }
            else if (!_posts.Any())
            {
                <div class="text-center py-8 text-gray-500">
                    Nessuna discussione trovata.
                </div>
            }
            else
            {
                @foreach (var post in FilteredPosts)
                {
                    <div class="border-b pb-6 hover:bg-gray-50 p-4 rounded-lg transition duration-150">
                        <div class="flex items-center mb-2">
                            <img class="h-10 w-10 rounded-full" src="@post.Author.AvatarUrl" alt="@post.Author.Name">
                            <div class="ml-3">
                                <p class="text-sm font-medium text-gray-900">@post.Author.Name</p>
                                <p class="text-sm text-gray-500">@FormatTimeAgo(post.CreatedAt)</p>
                            </div>
                            <span class="ml-3 bg-blue-100 text-blue-700 px-2 py-1 rounded-full text-xs font-medium">
                                @post.Category
                            </span>
                        </div>
                        <h3 class="text-lg font-medium text-gray-900 mb-2">@post.Title</h3>
                        <p class="text-gray-600">@post.Content</p>
                        <div class="mt-3 flex items-center space-x-4">
                            <button @onclick="() => ShowReplyModal(post)" 
                                    class="text-gray-500 hover:text-indigo-600 transition duration-150">
                                <i class="far fa-comment mr-1"></i> @post.RepliesCount risposte
                            </button>
                            <button @onclick="() => LikePost(post.Id)"
                                    class="text-gray-500 hover:text-indigo-600 transition duration-150">
                                <i class="far fa-heart mr-1"></i> @post.LikesCount
                            </button>
                            <button class="text-gray-500 hover:text-indigo-600 transition duration-150">
                                <i class="far fa-bookmark mr-1"></i> Salva
                            </button>
                            <button class="text-gray-500 hover:text-indigo-600 transition duration-150">
                                <i class="far fa-share-square mr-1"></i> Condividi
                            </button>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
</div>

@code {
    private List<Post>? _posts;
    private string searchQuery = string.Empty;
    private string selectedCategory = "Tutti";
    private readonly string[] categories = new[] { "Tutti", "Matematica", "Fisica", "Informatica" };

    private IEnumerable<Post> FilteredPosts =>
        _posts?.Where(p =>
            (selectedCategory == "Tutti" || p.Category == selectedCategory) &&
            (string.IsNullOrEmpty(searchQuery) ||
             p.Title.Contains(searchQuery, StringComparison.OrdinalIgnoreCase) ||
             p.Content.Contains(searchQuery, StringComparison.OrdinalIgnoreCase)))
        ?? Enumerable.Empty<Post>();

    protected override async Task OnInitializedAsync()
    {
        _posts = await ForumService.GetPostsAsync();
    }

    private void FilterByCategory(string category)
    {
        selectedCategory = category;
    }

    private async Task LikePost(int postId)
    {
        await ForumService.LikePostAsync(postId);
        _posts = await ForumService.GetPostsAsync();
    }

    private string FormatTimeAgo(DateTime date)
    {
        var span = DateTime.Now - date;
        
        if (span.TotalMinutes < 1)
            return "Poco fa";
        if (span.TotalHours < 1)
            return $"{span.Minutes} minuti fa";
        if (span.TotalDays < 1)
            return $"{span.Hours} ore fa";
        return $"{span.Days} giorni fa";
    }

    private void ShowNewDiscussionModal()
    {
        // TODO: Implement modal dialog
    }

    private void ShowReplyModal(Post post)
    {
        // TODO: Implement modal dialog
    }
}
